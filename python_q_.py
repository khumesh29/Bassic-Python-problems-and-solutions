# -*- coding: utf-8 -*-
"""python_Q.

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1yavmNviRBkQf5RxtFEkPjazkEkwZYG7l
"""

# 1.) Program who takes input as age and tells whether you are eligible to vote or not ?

x = int(input())
def age(x):
    if x > 18:
        print("eligible to vote")
    else:
        print("not eligible to vote")

age(x)

#2.) Program to find larger number entered by user

l1 = list(map(int, input().split())) # enter the no.s by giving space between them
l1.sort()
l1[-1]

# 3(a).) Program to find the average of entered numbers entered by a user?

l2 = list(map(int, input().split()))  # you can  enter  several inputs in single bar by giving spaces between them
avg = (sum(l2)) / (len(l2))
print(avg)
#sum(l2)

9# 3(b).) Program to find the average of two numbers entered by a user?
x = int(input("enter first no.:"))
y = int(input("enter second no.:"))
z = (x+y) / 2
z

# 4(a).)  Program to calculate Square entered by User .

x = (int(input()))**2
x

# 4(b).)  Program to calculate Square entered by User .

import math
y = pow(int(input()), 2)
y

# 5.) Program to display User entered name using Input() followed by “Good Afternoon”.

name = input()
print("good afternoon: ",name)

# 6.) Program to detect double Spaces in a User entered String if yes then replace it with single space.
x = input()
if "  " in x:
  print(True)
  y = x.replace("  ", " ")  # replacing double  space with single space
  print(y)
else:
  print(False)
  print(x)

# 7.) Program to format below code using escape sequence Characters.
# “Dear Sir Python is very amazing Programming language.Please share more Questions like this Thank you”

x =("Dear Sir \nPython is very amazing Programming language. \nPlease share more Questions like this Thank you")   # by putting \n we can do this process
print(x)

# 8.) Program to store 7 names of your friends entered by User .
l = []
for  i in range(7):
  if i<7:
    x = input()         # by applying loop it will take input 7 times
    l.append(x)
    i+=1
l

# 9.) Program to accept Marks of 4 students entered by user and display them in sorted Way ( in ascending order).

l1 = []
for i in range(4):
    if i<4:
      x = int(input())
      l1.append(x)
      l1.sort()
      i+=1
l1

# 10.) Program to save heights of 10 students in tuple and then change the height of 3rd student.
t1 = tuple(map(int, input().split()))     #taking input tuple form
if len(t1)==10:
  x = list(t1)       # conversion of tuple into list
  x[2] = 4           # changing 3rd element
  t1 = tuple(x)      # conversion of list into tuple
  print(t1)
else:
  print("firstly enter all the 10 heights")

#  11(a). Program to calculate sum of first N natural numbers by **for loop**.

def nsum(n):
  sum = 0
  for i in range(1,n+1):
    if i<=n:
      sum = sum +i
      i=+1
  return sum

nsum(5)

# 11(b). Program to calculate sum of first N natural numbers by **while loop**.

def nsum(x):
  sum = 1
  while x>1:
    sum = sum+x
    x-=1
  return sum

nsum(10)

# 12.) Program to calculate teen ager students in list.
l1 = [11,9,14,18,15,16,20,13,16,17,13,18,0]
for i in l1:
  if 12 < i < 20:
   print(i, end=" ")

# 13.) Program to calculate sum of elements of list having value less than 10.
l1 = []
t1 = list(map(int, input().split()))
for i in t1:
  if i <10:
    l1.append(i)
print(sum(l1))

# 14.) Program to check whether an entered username is 10 characters long or not.

x = input()
if len(x)==10:
  print("username have 10 characters")
else:
  print("username don't have 10 characters")

# 15.) A mail is defined as spam if it contains any from the below keywords. Write a program to check if text entered by a user is spam or not.
#spam_words=[“make a lot of money”, “buy now” , “subscribe this” , “Click this”, “you Won” ,”Discount” ,”Coupan”]

spam_words=["make a lot of money", "buy now" , "subscribe this" , "click this", "you Won" ,"discount" ,"coupon"]
mail = input().lower()   # converting the  input into lower case
def check(mail):
  flag = False
  for word in spam_words:
    if word in mail:
      flag = True
      break
    else:
      flag = False

  if(flag == True):
    print("Spam")
  else:
    print("text entered is not a spam")

check(mail)

# 16.) check wheather the given student is in college or not

x =["khumesh","rudransh"]
name=input()
def check(name):
  if (name in x):
    print(name, "in cp")
  elif (name in x):
    print(name, "in modi")
  else:
    print(name, "in any other college")
check(name)

# 17.) Program to print table of a number in reversed order.

n = int(input())
for i in reversed(range(1,11)):
  x = n*i
  print(n,"*",i,"=",x)





# 18.)Create two programs to print a table of user entered number using while and for loop.
n = int(input())

# a) by for loop
print("  \nby for loop")
for i in range(1,11):
  x = n*i
  print(n,"*",i,"=",x)

# b) by for loop
print ("  \nby while loop")
y = 1
while y<=10:
  z = n*y
  print(n,"*",y,"=",z)
  y+=1

# 19.) Program to check whether a entered K_ID is valid or Not. Valid means exist in Our Database
n = int(input("no. of kids: "))
kid = []
for  i in range(n):
  if i<n:
    y = (input("kid:"))
    kid.append(y)
    i+=1
print(kid)
x = input("check this kid in dataset: ")
def valid(x):
  flag = False
  for i in kid:
    if i in x:
     flag = True
     break
    else:
      flag = False
  if (flag==True):
    print("kid is valid")
  else:
    print("kid is not valid")
valid(x)

# 20.) Program to take 10 numbers input and display only distinct elements
s = {}
s1 = set(s)
for  i in range(10):
  if i<10:
    x = input()
    s1.add(x)
    i+=1
s1

# 21.) Program to find out whether a student is overall pass or fail. His marks in 5 subjects entered by the user.
#To pass in each subject he must score 33%.To overall pass he must pass in all subjects and total marks in all subjects greater than 40%.
#Maximum marks in each subject is 100.
marks = []
for  i in range(1,6):
  x = int(input(f"marks of sub: {i}  "))
  marks.append(x)

q = (sum(marks)/500)*100
maximum_marks = 100
c = []
for i in marks:
  y = (i/maximum_marks)*100
  if y > 33:
    print("student pass in particular sub of marks:",i)
    c.append(i)
  else:
    print("student fail in particular sub of marks:",i)
print("list of no. of marks for which the student is pass:",c)
if len(c)==5:
  print("overall % of the student: ",q,"%")
  if q>=40:
    print("student is overall pass")
  else:
    print("student is overall fail")

elif len(c)<5:
  print("overall % of the student: ",q,"%")
  print(" because of not pass in all the subjects, student is overall fail")

# 22.) Program to create a dictionary with keys=name in English and value = Meaning of name.
x = {}
y = input("name:")
z = input("meaning of name:")
x[y] = z
print(x)

# 23.) Program to print first 10 prime numbers whose module with 5 is 2.
result = []

# making function for prime no.
def is_prime(y):
  flag = False
  if y==2:
    flag=True
  else:
    for i in range(2,y):
        if (y%i==0):
            flag=False
            break
        else:
          flag=True
  return flag

# giving the condition module with 5 is 2.
n=[]
i=0
while (len(n)<10):
  if(is_prime(i) and (i%5==2)):
    n.append(i)
  i=i+1
print(n)

# 24.) factorial by while  loop

def factorial(x):
  prod = 1
  while x>1:
    prod = prod*x
    x-=1
  return prod

factorial(7)

#25.) factorial by for loop

def factorial(x):
  prod = 1
  for i in range(1,x+1):
    prod = prod*i

  return prod

factorial(16)

# 26.) factorial by recurssion

def fac(n):
  if n==0 or n==1:
      return 1
  else:
      return n*fac(n-1)

fac(6)

# 27.) repeated addision of descending values

def nsum(x):
  sum = 1
  while x>1:
    sum = sum+x
    x-=1
  return sum

nsum(10)

# 28.) to find wheather it is leap year or not

def is_leap(year):
    leap = False

    if year%400==0:
        leap = True
    elif ((year%100!=0) and (year%4==0)):
        leap  = True

    return leap

year = int(input())
print(is_leap(year))

# 29.) fubbonacci  series by  while loop
leng = int(input())
x = 0
y = 1
itr = 0
while itr<=leng:
    print(x, end=',')
    sum = x+y
    x = y
    y = sum
    itr+=1

# 30.) right angled triangle of '*'
def rt(r):
    for x in range(r):
        print('*'*(x+1),)
rt(5)

# 31.) isoscelous triangle of '*'
def pyfun(x):
    for i in range(x):
        print(' '*(x-i-1) + '*'*(2*i+1))
pyfun(5)

